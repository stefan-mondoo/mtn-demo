# Copyright (c) Mondoo, Inc.
# SPDX-License-Identifier: BUSL-1.1
policies:
  - uid: mondoo-movetheneedle-demo
    name: Mondoo Move the Needle Demo
    version: 1.0
    license: BUSL-1.1
    tags:
      mondoo.com/category: demo
      mondoo.com/platform: windows linux k
    authors:
      - name: Mondoo, Inc
        email: hello@mondoo.com
    docs:
      desc: |-
        The Mondoo Move the Needle Demo Policy is used to demonstrate the capabilities of Mondoo's security platform.

    groups:
    #WINDOWS
      - title: Windows SMB Security
        filters: |
          asset.family.contains('windows')
        checks:
          - uid: mondoo-windows-security-configure-smb-v1-server-is-set-to-disabled
    #LINUX
      - title: Linux SSH Security
        filters: |
          asset.family.contains('linux')
        checks:
          - uid: mondoo-linux-security-ssh-root-login-is-disabled
    #K8S
      - title: Kubernetes Pods Security
        filters: asset.platform == "k8s-pod"
        checks:
          - uid: mondoo-kubernetes-security-pod-runasnonroot

    scoring_system: highest impact
    
queries:
  - uid: mondoo-windows-security-configure-smb-v1-server-is-set-to-disabled
    title: Ensure 'Configure SMB v1 server' is set to 'Disabled'
    impact: 100
    mql: |
      registrykey.property( path: 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters', name: 'SMB1' ).value == 0
    docs:
      desc: |-
        This setting configures the server-side processing of the Server Message Block version 1 (SMBv1) protocol.

        The recommended state for this setting is: `Disabled`.
      remediation:
        - id: grouppolicy
          desc: |
            #### Using Group Policy

            To establish the recommended configuration via GP, set the following UI path to `Disabled`:

            ```
            Computer Configuration\\Policies\\Administrative Templates\\MS Security Guide\\Configure SMB v1 server
            ```

            **Note:**
            This Group Policy path does not exist by default. An additional Group Policy template ( `SecGuide.admx/adml` ) is required - it is available from Microsoft at [this link](https://techcommunity.microsoft.com/t5/Microsoft-Security-Baselines/Security-baseline-FINAL-for-Windows-10-v1903-and-Windows-Server/ba-p/701084)

            **Impact:**

            Some legacy OSes (e.g. Windows XP, Server 2003 or older), applications and appliances may no longer be able to communicate with the system once SMBv1 is disabled. We recommend careful testing be performed to determine the impact prior to configuring this as a widespread control, and where possible, remediate any incompatibilities found with the vendor of the incompatible system. Microsoft is also maintaining a thorough (although not comprehensive) list of known SMBv1 incompatibilities at this link: [SMB1 Product Clearinghouse \| Storage at Microsoft](https://blogs.technet.microsoft.com/filecab/2017/06/01/smb1-product-clearinghouse/)
        - id: powershell
          desc: |
            #### Using PowerShell

            To establish the recommended configuration via PowerShell, run the following commands:

            ```powershell
            $RegistryPath = 'HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters'
            $Name         = 'SMB1'
            $Value        = '0'

            # Create the key if it does not exist
            If (-NOT (Test-Path $RegistryPath)) {
                New-Item -Path $RegistryPath -Force | Out-Null
            }

            # Now set the value
            New-ItemProperty -Path $RegistryPath -Name $Name -Value $Value -PropertyType DWORD -Force
            ```
            
  - uid: mondoo-linux-security-ssh-root-login-is-disabled
    title: Ensure SSH root login is disabled or set to prohibit-password
    impact: 100
    mql: |
      sshd.config.params["PermitRootLogin"] == "no" || sshd.config.params["PermitRootLogin"] == "prohibit-password" || sshd.config.params["PermitRootLogin"] == "without-password"
    docs:
      desc: The `PermitRootLogin` parameter specifies if the root user can log in using ssh(1). The default is no.
      remediation: |-
        Edit the `/etc/ssh/sshd_config` file to set the `PermitRootLogin` parameter as follows:

        ```
        PermitRootLogin no
        ```

  - uid: mondoo-kubernetes-security-pod-runasnonroot
    title: Container should not run as root
    impact: 100
    filters: k8s.pod.annotations['policies.k8s.mondoo.com/mondoo-kubernetes-security-pod-runasnonroot'] != 'ignore'
    mql: |
      k8s.pod.containers.all(securityContext['runAsNonRoot'] == true)
        || k8s.pod.containers.all(securityContext['runAsNonRoot'] == empty)
        && k8s.pod.podSpec.securityContext.runAsNonRoot == true
      k8s.pod.initContainers.all(securityContext['runAsNonRoot'] == true)
        || k8s.pod.initContainers.all(securityContext['runAsNonRoot'] == empty)
        && k8s.pod.podSpec.securityContext.runAsNonRoot == true
      k8s.pod.ephemeralContainers.all(securityContext['runAsNonRoot'] == true)
        || k8s.pod.ephemeralContainers.all(securityContext['runAsNonRoot'] == empty)
        && k8s.pod.podSpec.securityContext.runAsNonRoot == true
    docs:
      desc: |
        This check ensures that containers do not run as the root user by requiring `runAsNonRoot: true` in the security context. This configuration enforces that containers run with a non-root user, reducing the risk of privilege escalation and unauthorized access.

        **Why this matters**

        Running containers as the root user grants them the same privileges as root on the host system. If containers run as root:

        - Attackers or compromised processes may gain elevated privileges, increasing the risk of container escapes or host compromise.
        - Security boundaries between workloads are weakened, making it easier to access sensitive resources.
        - Compliance with security best practices and organizational policies may be violated.

        By ensuring that containers run as non-root, organizations can strengthen workload isolation, reduce the attack surface, and maintain a secure Kubernetes environment.
      audit: |
        Check for the existence of `runAsNonRoot: true` setting in the `securityContext`:

        ```yaml
        ---
        apiVersion: v1
        kind: Pod
        spec:
          containers:
            - name: container-name
              image: index.docker.io/yournamespace/repository
              securityContext:
                runAsNonRoot: true
        ```

        It is also possible to set it for all containers at the Pod level:

        ```yaml
        ---
        apiVersion: v1
        kind: Pod
        spec:
          securityContext:
            runAsNonRoot: true
          containers:
            - name: container-name
              image: index.docker.io/yournamespace/repository
        ```
      remediation: |
        Ensure `runAsNonRoot` is set to `true` in the `securityContext`:

        ```yaml
        ---
        apiVersion: v1
        kind: Pod
        spec:
          containers:
            - name: container-name
              image: index.docker.io/yournamespace/repository
              securityContext:
                runAsNonRoot: true
        ```

        It is also possible to set it for all containers at the Pod level:

        ```yaml
        ---
        apiVersion: v1
        kind: Pod
        spec:
          securityContext:
            runAsNonRoot: true
          containers:
            - name: container-name
              image: index.docker.io/yournamespace/repository
        ```
    refs:
      - url: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#securitycontext-v1-core
        title: Configure a Security Context for a Pod or Container

